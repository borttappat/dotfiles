#!/run/current-system/sw/bin/bash

STATE_FILE="/tmp/pomodoro_state"
PAUSE_FILE="/tmp/pomodoro_pause"

# Function to start or resume the timer
start_timer() {
  if [ -f "$PAUSE_FILE" ]; then
    mv "$PAUSE_FILE" "$STATE_FILE"
    echo "Pomodoro timer resumed."
  elif [ ! -f "$STATE_FILE" ]; then
    echo "WORK $(date +%s)" > "$STATE_FILE"
    echo "Pomodoro timer started."
  else
    echo "Pomodoro timer is already running."
  fi
}

# Function to toggle between work and rest
toggle_timer() {
  if [ ! -f "$STATE_FILE" ]; then
    echo "Timer not initialized. Use 'pomo start' to start."
    exit 1
  fi

  read state start_time < "$STATE_FILE"
  
  if [ "$state" == "WORK" ]; then
    echo "REST $(date +%s)" > "$STATE_FILE"
  else
    echo "WORK $(date +%s)" > "$STATE_FILE"
  fi
}

# Function to pause the timer
pause_timer() {
  if [ -f "$STATE_FILE" ]; then
    mv "$STATE_FILE" "$PAUSE_FILE"
    echo "Pomodoro timer paused."
  else
    echo "Pomodoro timer is not running."
  fi
}

# Function to stop the timer
stop_timer() {
  if [ -f "$STATE_FILE" ]; then
    rm "$STATE_FILE"
    echo "Pomodoro timer stopped."
  elif [ -f "$PAUSE_FILE" ]; then
    rm "$PAUSE_FILE"
    echo "Pomodoro timer stopped."
  else
    echo "Pomodoro timer is not running."
  fi
}

case "$1" in
  start)
    start_timer
    ;;
  toggle)
    toggle_timer
    ;;
  pause)
    pause_timer
    ;;
  stop)
    stop_timer
    ;;
  *)
    echo "Usage: pomo {start|toggle|pause|stop}"
    exit 1
    ;;
esac

